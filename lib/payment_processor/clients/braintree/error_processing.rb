module PaymentProcessor
  module Clients
    module Braintree
      class ErrorProcessing

        # Collection of error codes, generated by braintree for invalid
        # customer/credit card transaction data.
        #
        # See https://developers.braintreepayments.com/reference/general/validation-errors/all/ruby
        # for code definitions.
        #
        USER_ERROR_CODES = [
          (81801..81813),
          (81501..81503),
          (91814..91826),
          (81604..81608),
          (81613..81616),
          (81709..81717),
          (91723..91726),
          81827,
          91803,
          81601,
          81723,
          81703,
          81706,
          81707,
          81736,
          81737,
          81528,
          81509].map{|code| code.is_a?(Range) ? code.to_a : code }
                .flatten
                .freeze

        PROCESSOR_DECLINED = 'processor_declined'

        FILTER = -> (error) { USER_ERROR_CODES.include?( error.code.to_i ) }

        def initialize(response)
          @response = response
        end

        def process
          return user_errors if user_errors.any?
          return transaction_error if processor_declined?

          raise_system_errors if system_errors.any?
        end

        private

        def raise_system_errors
          raise ::Braintree::ValidationsFailed.new(error_messages)
        end

        def error_messages
          system_errors.map{|e| "#{e.message} (#{e.code} on #{e.attribute})"}.join(', ')
        end

        def user_errors
          @user_errors ||= errors.select(&FILTER)
        end

        def system_errors
          @system_errors ||= errors.reject(&FILTER)
        end

        def errors
          @response.errors
        end

        def transaction_error
          if processor_declined?
            [{ code: @response.transaction.processor_response_code, message: @response.transaction.processor_response_text }]
          end
        end

        def processor_declined?
          @response.transaction and @response.transaction.status === PROCESSOR_DECLINED
        end
      end
    end
  end
end

